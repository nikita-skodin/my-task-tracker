ПРОЕКТ
типо тз можно прикрепить на гитхабе как тз н англ языке
Трекер задач 1 часть
цель:
написать первое REST приложение с валидацией и логикой немного тяжелее обычной базовой полностью в одно лицо
для дальнейшего деплоя

план

Cущности:

project
	taskState
			task

endPoints:

Post /api/projects - добавляет новый проект с тремя states (ResponseEntity<DTO>) +++
Get /api/projects - возвращает все проекты (ResponseEntity<List<DTO>>) +++
Get /api/projects?prefix=test - возвращает все проекты с префиксом тест (ResponseEntity<List<DTO>>) +++
Get /api/projects/{id} - возвращает проект по id (ResponseEntity<DTO>)  +++
Patch /api/projects/{id} - обновляет проект (ResponseEntity<DTO>) +++
Delete /api/projects/{id} - удаляет проект по id  (ResponseEntity.ok) +++

Get /api/projects/{project_id}/task-states - возвращает все стопки для проекта (ResponseEntity<List<DTO>>) +++
Post /api/projects/{project_id}/task-states - добавляет новую стопку (ResponseEntity<DTO>) +++
Get /api/projects/{project_id}/task-states/{task-states_id}- возвращает стопку по id (ResponseEntity<DTO>) +++
Patch /api/projects/{project_id}/task-states/{task-states_id} - обновляет стопку и меняет ордеры (ResponseEntity<DTO>) +-+-+-+-+-+-
Delete /api/projects/{project_id}/task-states/{task-states_id} - удаляет стопку по id  (ResponseEntity.ok) +++

Post /api/projects/{project_id}/task-states/{task-states_id}/tasks - добавляет новую таску (ResponseEntity<DTO>) +++
Get /api/projects/{project_id}/task-states/{task-states_id}/tasks - возвращает все таски для стопки (ResponseEntity<List<DTO>>) +++
Get /api/projects/{project_id}/task-states/{task-states_id}/tasks/{task_id} - возвращает таску по id (ResponseEntity<DTO>) +++
Patch /api/projects/{project_id}/task-states/{task-states_id}/tasks/{task_id} - обновляет таску (ResponseEntity<DTO>) +++
Delete /api/projects/{project_id}/task-states/{task-states_id}/tasks/{task_id} - удаляет таску по id  (ResponseEntity.ok) +++

Всегда принимаем DTO и валидируем его отдельно

Сущности:

Project:

Long id

String name

Instant createdAt

List<TaskState> taskStates


TaskState:

Long id

String name

Integer order // получаешь id одного и id второго, и просто меняешь их местами, на отдельном url

Instant createdAt

List<Task> tasks

Task:

Long id

String name

Instant createdAt

boolean isDone

String description

Затем

разобраться с ssl и добавить безопасность на уровне монолитов
и добавить восстановление пароля по почте

Затем

смотрим Bash
смотрим Docker
деплоим докером на сервер

